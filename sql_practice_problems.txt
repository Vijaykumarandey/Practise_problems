SELECT w1.Id
FROM Weather w1
JOIN Weather w2 ON DATEDIFF(w1.RecordDate, w2.RecordDate) = 1
WHERE w1.Temperature > w2.Temperature;
========================================
SELECT player_id, MIN(event_date) AS first_login
FROM Activity
GROUP BY player_id;
======================================
SELECT MAX(Salary) AS SecondHighestSalary
FROM Employee
WHERE Salary < (SELECT MAX(Salary) FROM Employee);
=========================================
SELECT name
FROM Users u
JOIN (SELECT user_id, COUNT(*) AS rating_count FROM MovieRating GROUP BY user_id ORDER BY rating_count DESC, user_id ASC LIMIT 1) r
ON u.user_id = r.user_id;

SELECT title
FROM Movies m
JOIN (SELECT movie_id, AVG(rating) AS avg_rating FROM MovieRating WHERE created_at BETWEEN '2020-02-01' AND '2020-02-29' GROUP BY movie_id ORDER BY avg_rating DESC, movie_id ASC LIMIT 1) t
ON m.movie_id = t.movie_id;
==============================
SELECT e.name
FROM Employee e
JOIN Employee m ON e.managerId = m.id
WHERE e.salary > m.salary;
====================================
DELETE e1 FROM Person e1
JOIN Person e2
ON e1.email = e2.email AND e1.id > e2.id;

=================================
SELECT id, visit_date, people
FROM (
  SELECT id, visit_date, people,
         LEAD(people, 1) OVER (ORDER BY visit_date) AS p1,
         LAG(people, 1) OVER (ORDER BY visit_date) AS p2
  FROM Stadium
) s
WHERE (people >= 100 AND p1 >= 100 AND p2 >= 100)
   OR (people >= 100 AND p1 >= 100)
   OR (people >= 100 AND p2 >= 100);
======================================
SELECT customer_id
FROM Customer
GROUP BY customer_id
HAVING COUNT(DISTINCT product_key) = (SELECT COUNT(*) FROM Product);